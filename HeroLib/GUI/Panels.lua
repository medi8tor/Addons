local n,v=...local G=v.Utils local S=string.format local Z=strsplit v.GUI={}local y=v.GUI local p=G.StringToNumberIfPossible local t=G.SubStringCount local function Q(n,...)local v={...}local G=n for n=1,#v-1,1 do G=G[v[n]]end local S=p(v[#v])return G,S end local function I(n,v)local G=n if v then if v.ReloadRequired then G=G.."\n\n\124\099\070\070\070\070\048\048\048\048\084\104\105\115 \111\112\116\105\111\110 \114\101\113\117\105\114\101\115 \097 \114\101\108\111\097\100 \116\111 \116\097\107\101 \101\102\102\101\099\116\046\124\114"end end return G end local function s(n,v)n:SetScript("\079\110\069\110\116\101\114",function(n)Mixin(GameTooltip,BackdropTemplateMixin)GameTooltip:SetOwner(n,"\065\078\067\072\079\082\095\082\073\071\072\084")GameTooltip:ClearLines()GameTooltip:SetBackdropColor(0,0,0,1)GameTooltip:SetText(v,nil,nil,nil,1,true)GameTooltip:Show()end)n:SetScript("\079\110\076\101\097\118\101",function(n)GameTooltip:Hide()end)end local B={}local function O(n,v,G,S,y)local p=CreateFrame("\067\104\101\099\107\066\117\116\116\111\110","\036\112\097\114\101\110\116\095"..v,n,"\073\110\116\101\114\102\097\099\101\079\112\116\105\111\110\115\067\104\101\099\107\066\117\116\116\111\110\084\101\109\112\108\097\116\101")n[v]=p p.SettingTable,p.SettingKey=Q(n.SettingsTable,Z("\046",v))p.SavedVariablesTable,p.SavedVariablesKey=n.SavedVariablesTable,v if not B[n.usedName]then p:SetPoint("\084\079\080\076\069\070\084",15,-10)else p:SetPoint("\084\079\080\076\069\070\084",B[n.usedName][1],"\066\079\084\084\079\077\076\069\070\084",B[n.usedName][2],B[n.usedName][3])end B[n.usedName]={p;0;0}p:SetChecked(p.SettingTable[p.SettingKey])_G[p:GetName().."\084\101\120\116"]:SetText("\124\099\048\048\100\102\098\056\048\050"..(G.."\124\114"))s(p,I(S,y))local t if y and y.ReloadRequired then t=function(n)n.SavedVariablesTable[n.SavedVariablesKey]=not n.SettingTable[n.SettingKey]end else t=function(n)local v=not n.SettingTable[n.SettingKey]n.SettingTable[n.SettingKey]=v n.SavedVariablesTable[n.SavedVariablesKey]=v end end p:SetScript("\111\110\067\108\105\099\107",t)end local function c(n,v,G,S,y,p)local t=CreateFrame("\070\114\097\109\101","\036\112\097\114\101\110\116\095"..v,n,"\085\073\068\114\111\112\068\111\119\110\077\101\110\117\084\101\109\112\108\097\116\101")n[v]=t t.SettingTable,t.SettingKey=Q(n.SettingsTable,Z("\046",v))t.SavedVariablesTable,t.SavedVariablesKey=n.SavedVariablesTable,v local O if p and p.ReloadRequired then O=function(n)UIDropDownMenu_SetSelectedID(t,n:GetID())t.SavedVariablesTable[t.SavedVariablesKey]=UIDropDownMenu_GetText(t)end else O=function(n)UIDropDownMenu_SetSelectedID(t,n:GetID())local v=UIDropDownMenu_GetText(t)t.SettingTable[t.SettingKey]=v t.SavedVariablesTable[t.SavedVariablesKey]=v end end if not B[n.usedName]then t:SetPoint("\084\079\080\076\069\070\084",0,-30)else t:SetPoint("\084\079\080\076\069\070\084",B[n.usedName][1],"\066\079\084\084\079\077\076\069\070\084",B[n.usedName][2]-15,B[n.usedName][3]-20)end B[n.usedName]={t;15;0}local function c(n,v)local S=UIDropDownMenu_CreateInfo()for n,G in pairs(G)do S=UIDropDownMenu_CreateInfo()S.text=G S.value=G S.func=O UIDropDownMenu_AddButton(S,v)end end UIDropDownMenu_Initialize(t,c)UIDropDownMenu_SetSelectedValue(t,t.SettingTable[t.SettingKey])UIDropDownMenu_JustifyText(t,"\076\069\070\084")local w=t:CreateFontString(nil,"\079\086\069\082\076\065\089","\071\097\109\101\070\111\110\116\072\105\103\104\108\105\103\104\116")n[v.."\068\114\111\112\100\111\119\110\084\105\116\108\101"]=w w:SetPoint("\066\079\084\084\079\077\076\069\070\084",t,"\084\079\080\076\069\070\084",20,5)w:SetJustifyH("\076\069\070\084")w:SetText("\124\099\048\048\100\102\098\056\048\050"..(S.."\124\114"))s(t,I(y,p))end local function w(n,v,G,y,p,t,O)local c=CreateFrame("\083\108\105\100\101\114","\036\112\097\114\101\110\116\095"..v,n,"\079\112\116\105\111\110\115\083\108\105\100\101\114\084\101\109\112\108\097\116\101")n[v]=c c.SettingTable,c.SettingKey=Q(n.SettingsTable,Z("\046",v))c.SavedVariablesTable,c.SavedVariablesKey=n.SavedVariablesTable,v if not B[n.usedName]then c:SetPoint("\084\079\080\076\069\070\084",20,-25)else c:SetPoint("\084\079\080\076\069\070\084",B[n.usedName][1],"\066\079\084\084\079\077\076\069\070\084",B[n.usedName][2]+5,B[n.usedName][3]-20)end B[n.usedName]={c;-5;-20}c:SetMinMaxValues(G[1],G[2])c.minValue,c.maxValue=c:GetMinMaxValues()c:SetValue(c.SettingTable[c.SettingKey])c:SetValueStep(G[3])c:SetObeyStepOnDrag(true)local w=c:GetName()_G[w.."\076\111\119"]:SetText(c.minValue)_G[w.."\072\105\103\104"]:SetText(c.maxValue)s(c,I(p,O))local A=c:CreateFontString(nil,"\079\086\069\082\076\065\089","\071\097\109\101\070\111\110\116\072\105\103\104\108\105\103\104\116\083\109\097\108\108")n[v.."\083\108\105\100\101\114\083\104\111\119\086\097\108\117\101"]=A A:SetPoint("\084\079\080",c,"\066\079\084\084\079\077",0,0)A:SetWidth(50)A:SetJustifyH("\067\069\078\084\069\082")A:SetText(S("\037\046\050\102",c.SettingTable[c.SettingKey]))local d=c:CreateFontString(nil,"\079\086\069\082\076\065\089","\071\097\109\101\070\111\110\116\078\111\114\109\097\108")d:SetPoint("\066\079\084\084\079\077\076\069\070\084",c,"\084\079\080\076\069\070\084")d:SetJustifyH("\076\069\070\084")d:SetText("\124\099\048\048\100\102\098\056\048\050"..(y.."\124\114"))local F if O and O.ReloadRequired then F=function(n)local v=n:GetValue()n.SavedVariablesTable[n.SavedVariablesKey]=v A:SetText(S("\037\046\050\102",v))if t then t(n:GetValue())end end else F=function(n)local v=n:GetValue()n.SettingTable[n.SettingKey]=v n.SavedVariablesTable[n.SavedVariablesKey]=v if t then t(n:GetValue())end A:SetText(S("\037\046\050\102",v))end end c:SetScript("\079\110\086\097\108\117\101\067\104\097\110\103\101\100",F)end local function A(n,v,G,S,Z,y,p,t)local Q=CreateFrame("\066\117\116\116\111\110","\036\112\097\114\101\110\116\095"..v,n,"\085\073\080\097\110\101\108\066\117\116\116\111\110\084\101\109\112\108\097\116\101")n[v]=Q if y then Q:SetWidth(y)else Q:SetWidth(150)end if p then Q:SetHeight(p)else Q:SetHeight(20)end if not B[n.usedName]then Q:SetPoint("\084\079\080\076\069\070\084",15,-10)else Q:SetPoint("\084\079\080\076\069\070\084",B[n.usedName][1],"\066\079\084\084\079\077\076\069\070\084",B[n.usedName][2],B[n.usedName][3])end B[n.usedName]={Q;0,0}_G[Q:GetName().."\084\101\120\116"]:SetText("\124\099\048\048\100\102\098\056\048\050"..(G.."\124\114"))s(Q,I(S,t))Q:SetScript("\111\110\067\108\105\099\107",Z)end y.PanelsTable={}function y.CreatePanel(n,v,G,S,Z)local p=CreateFrame("\070\114\097\109\101",v..("\095"..G),UIParent)n.Panel=p n.Panel.Children={}n.Panel.SettingsTable=S n.Panel.SavedVariablesTable=Z p.name=v p.usedName=v:gsub(" ","")local t=Settings.RegisterCanvasLayoutCategory(p,v)Settings.RegisterAddOnCategory(t)p.category=t y.PanelsTable[p.usedName]=p y.PanelsTable[p.category]=t return p end function y.CreateChildPanel(n,v)local G=n:GetName()local S=t(G,"\095\067\104\105\108\100\080\097\110\101\108\095")local Z=v for n=0,S,1 do end local p=CreateFrame("\070\114\097\109\101",G..("\095\067\104\105\108\100\080\097\110\101\108\095"..Z),n)n.Children[Z]=p p.Children={}p.SettingsTable=n.SettingsTable p.SavedVariablesTable=n.SavedVariablesTable p.name=Z p.parent=n.name p.usedName=G..("\095\067\104\105\108\100\080\097\110\101\108\095"..Z:gsub(" ",""))local Q=Settings.RegisterCanvasLayoutSubcategory(n.category,p,Z)Settings.RegisterAddOnCategory(Q)p.category=Q y.PanelsTable[p.usedName]=p y.PanelsTable[p.category]=Q return p end function y.TogglePanel(n)local v={}v.element=n InterfaceOptionsListButton_ToggleSubCategories(v)end local d={CheckButton=O;Dropdown=c;Slider=w,Button=A}function y.CreatePanelOption(n,...)d[n](...)end function y.GetPanelByName(n)return y.PanelsTable[n]end function y.LoadSettingsRecursively(n,v)local G=v or""for v,S in pairs(n)do local Z if G~=""then Z=G..("\046"..v)else Z=v end if type(S)=="\084\097\098\108\101"then y.LoadSettingsRecursively(S,Z)else local G=p(v)local y=HeroLibDB.GUISettings[Z]if y~=nil then n[G]=y else HeroLibDB.GUISettings[Z]=S end end end end