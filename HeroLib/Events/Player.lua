local G,U=...local h=HeroCache local w=U.Unit local i=w.Player local Z=w.Pet local M=w.Target local d=U.Spell local O=U.Item local c=Enum.SpellBookSpellBank local C=SPELL_FAILED_UNIT_NOT_INFRONT local H=C_Timer local W=GetSpecialization local k=GetSpecializationInfo local Y=GetFlyoutInfo local n=GetFlyoutSlotInfo local g=GetNumFlyouts local o=GetFlyoutID local b=UnitClass local y=C_ClassTalents.GetActiveConfigID local T=C_Spell.GetSpellInfo local m=C_SpellBook.GetNumSpellBookSkillLines local K=C_SpellBook.GetSpellBookItemInfo local t=C_SpellBook.GetSpellBookSkillLineInfo local F=C_SpellBook.HasPetSpells local A=C_Traits.GetConfigInfo local a=C_Traits.GetDefinitionInfo local B=C_Traits.GetEntryInfo local e=C_Traits.GetNodeInfo local x=C_Traits.GetSubTreeInfo local r=C_Traits.GetTreeNodes local z=GetTime local s=string.find local Q=string.sub local R=table.insert local j=wipe local function q(G)do local U=F()if U then local w=h.Persistent.SpellLearned.Pet local i=c.Pet for U=1,U,1 do local h=K(U,i)local Z=h.spellID if Z then local U=d(Z,"\080\101\116")if U:IsAvailable(true)then if not G then w[U:ID()]=true end end end end end end do local U=h.Persistent.SpellLearned.Player for h=1,m(),1 do local w=t(h)local i=w.offSpecID local Z=w.itemIndexOffset local M=w.numSpellBookItems local d=c.Player if not i then for h=1,Z+M,1 do local w=K(h,d)local i=w.spellID if i then if not G then U[i]=true end end end end end for G=1,g(),1 do local h=o(G)local w,i=select(3,Y(h))if i and w>0 then for G=1,w,1 do local w,i,Z=n(h,G)if w and Z then U[w]=true end end end end end end local function p()q(true)end U.CombatStarted=0 U.CombatEnded=1 U:RegisterForEvent(function()U.CombatStarted=z()U.CombatEnded=0 end,"\080\076\065\089\069\082\095\082\069\071\069\078\095\068\073\083\065\066\076\069\068")U:RegisterForEvent(function()U.CombatStarted=0 U.CombatEnded=z()end,"\080\076\065\089\069\082\095\082\069\071\069\078\095\069\078\065\066\076\069\068")U:RegisterForEvent(function(G,h,w)if h=="\068\052"and s(w,"\080\084")then U.BossModTime=tonumber(Q(w,4,5))U.BossModEndTime=z()+U.BossModTime elseif h=="\066\105\103\087\105\103\115"and string.find(w,"\080\117\108\108")then U.BossModTime=tonumber(Q(w,8,9))U.BossModEndTime=z()+U.BossModTime end end,"\067\072\065\084\095\077\083\071\095\065\068\068\079\078")U:RegisterForEvent(function(G,w)if G=="\080\076\065\089\069\082\095\083\080\069\067\073\065\076\073\090\065\084\073\079\078\095\067\072\065\078\071\069\068"and w~="\112\108\097\121\101\114"then return end h.Persistent.Player.Class={b("\112\108\097\121\101\114")}h.Persistent.Player.Spec={k(W())}j(h.Persistent.Texture.Spell)j(h.Persistent.Texture.Item)i:UpdateEquipment()local Z=i:GetEquipment()for G=1,16,1 do if slot~=4 and not Z[slot]then H.After(2,function()i:UpdateEquipment()end)end end if G=="\080\076\065\089\069\082\095\083\080\069\067\073\065\076\073\090\065\084\073\079\078\095\067\072\065\078\071\069\068"then local G G=function()if h.Persistent.Player.Spec[1]~=nil then U.LoadRestores()U.LoadOverrides(h.Persistent.Player.Spec[1])else H.After(2,G)end end G()end if G=="\080\076\065\089\069\082\095\083\080\069\067\073\065\076\073\090\065\084\073\079\078\095\067\072\065\078\071\069\068"or G=="\080\076\065\089\069\082\095\084\065\076\069\078\084\095\085\080\068\065\084\069"or G=="\084\082\065\073\084\095\067\079\078\070\073\071\095\085\080\068\065\084\069\068"or G=="\084\082\065\073\084\095\083\085\066\095\084\082\069\069\095\067\072\065\078\071\069\068"then UpdateTalents=function()j(h.Persistent.Talents)local G=y()local U if G then U=A(G)end if G~=nil and U~=nil then local w=U.treeIDs for U=1,#w,1 do for U,w in pairs(r(w[U]))do local i=e(G,w)local Z=i.activeEntry local M=i.subTreeID local d=i.activeRank if M then local U=x(G,M)if U then local G=U.name h.Persistent.Player.HeroTrees[M]=G if U.isActive then h.Persistent.Player.ActiveHeroTree=G h.Persistent.Player.ActiveHeroTreeID=M end end end if Z and d>0 then local U=Z.entryID local w=B(G,U)if w and w.definitionID then local G=w.definitionID local U=a(G)local i=U.spellID local Z=T(i)h.Persistent.Talents[i]=h.Persistent.Talents[i]and h.Persistent.Talents[i]+d or d end end end end else H.After(2,UpdateTalents)end end UpdateTalents()end end,"\080\076\065\089\069\082\095\076\079\071\073\078","\090\079\078\069\095\067\072\065\078\071\069\068\095\078\069\087\095\065\082\069\065","\080\076\065\089\069\082\095\083\080\069\067\073\065\076\073\090\065\084\073\079\078\095\067\072\065\078\071\069\068","\080\076\065\089\069\082\095\084\065\076\069\078\084\095\085\080\068\065\084\069","\080\076\065\089\069\082\095\069\081\085\073\080\077\069\078\084\095\067\072\065\078\071\069\068","\084\082\065\073\084\095\067\079\078\070\073\071\095\085\080\068\065\084\069\068","\084\082\065\073\084\095\083\085\066\095\084\082\069\069\095\067\072\065\078\071\069\068")U:RegisterForEvent(function(G,U)i:Cache()H.After(3,function()i:Cache()end)end,"\080\076\065\089\069\082\095\076\079\071\073\078")U:RegisterForEvent(function(G,U)if G=="\080\076\065\089\069\082\095\083\080\069\067\073\065\076\073\090\065\084\073\079\078\095\067\072\065\078\071\069\068"and U~="\112\108\097\121\101\114"then return end if pcall(p)then j(h.Persistent.BookIndex.Player)j(h.Persistent.BookIndex.Pet)j(h.Persistent.SpellLearned.Player)j(h.Persistent.SpellLearned.Pet)q()end end,"\083\080\069\076\076\083\095\067\072\065\078\071\069\068","\076\069\065\082\078\069\068\095\083\080\069\076\076\095\073\078\095\084\065\066","\083\075\073\076\076\095\076\073\078\069\083\095\067\072\065\078\071\069\068","\080\076\065\089\069\082\095\071\085\073\076\068\095\085\080\068\065\084\069","\080\076\065\089\069\082\095\083\080\069\067\073\065\076\073\090\065\084\073\079\078\095\067\072\065\078\071\069\068","\085\083\069\095\071\076\089\080\072","\067\065\078\067\069\076\095\071\076\089\080\072\095\067\065\083\084","\065\067\084\073\086\065\084\069\095\071\076\089\080\072")U.UnitNotInFront=i U.UnitNotInFrontTime=0 U.LastUnitCycled=i U.LastUnitCycledTime=0 U:RegisterForEvent(function(G,h,w)if h==50 and w==C then U.UnitNotInFront=U.LastUnitCycled U.UnitNotInFrontTime=U.LastUnitCycledTime end end,"\085\073\095\069\082\082\079\082\095\077\069\083\083\065\071\069")