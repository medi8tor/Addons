local n,v=...local G,S=HeroCache,v.Utils local Z=v.Unit local y=Z.Player local p=Z.Pet local t=Z.Target local Q=v.Spell local I=v.Item local s=CreateFrame local B=GetTime local O=UIParent local c=UnitGUID local w=pairs local A=table.insert local d=table.wipe local F={}local g=3 local X={}local E={}local x={}local a={}v.SplashEnemies=F do local n=S.StartsWith local G=1 local p=2 local t={All=G,["\077\105\110\101 \079\110\108\121"]=p}local Q=G local function I(n)local v=c(n)local G=c(n.."\116\097\114\103\101\116")if v then E[v]=G end end local function s()if y:IsInRaidArea()and y:IsInRaid()then g=3 elseif y:IsInDungeonArea()and y:IsInParty()then g=4 else g=5 end I("\112\108\097\121\101\114")I("\112\101\116")if Q==G then if y:IsInParty()then for n,v in w(Z.Party)do local G=v:ID()I(G)I(G.."\112\101\116")end end if y:IsInRaid()then for n,v in w(Z.Raid)do local G=v:ID()I(G)I(G.."\112\101\116")end end end end s()v:RegisterForEvent(s,"\080\076\065\089\069\082\095\082\069\071\069\078\095\068\073\083\065\066\076\069\068","\071\082\079\085\080\095\082\079\083\084\069\082\095\085\080\068\065\084\069")v:RegisterForEvent(function(v,S)if Q==G and(not n(S,"\112\108\097\121\101\114")and(not n(S,"\112\101\116")and(not n(S,"\112\097\114\116\121")and not n(S,"\114\097\105\100"))))then return end if Q==p and(not n(S,"\112\108\097\121\101\114")and not n(S,"\112\101\116"))then return end I(S)end,"\085\078\073\084\095\084\065\082\071\069\084")v:RegisterForEvent(function(v,S)if Q==G and(not n(S,"\112\108\097\121\101\114")and(not n(S,"\112\097\114\116\121")and not n(S,"\114\097\105\100")))then return end if Q==p and not n(S,"\112\108\097\121\101\114")then return end I(S.."\112\101\116")end,"\085\078\073\084\095\080\069\084")function F.ChangeFriendTargetsTracking(n)assert(type(n)=="\115\116\114\105\110\103"and(n=="\065\108\108"or n=="\077\105\110\101 \079\110\108\121"),"\073\110\118\097\108\105\100 \084\114\097\099\107\105\110\103\046")local v=t[n]if v==Q then return end Q=v E={}s()end end do local function n(n,v,G,Z,y,p,t,Q,I,s,O,c)local w=X[c]if not w then return end if v~="\083\080\069\076\076\095\068\065\077\065\071\069"and w.Type~="\080\101\114\105\111\100\105\099\068\097\109\097\103\101"then return end local d={192231;383061}local F=S.ValueIsInTable(d,c)local g=E[Z]if not g and not F then return end local a=x[c][Z]if not a then if v~="\083\080\069\076\076\095\068\065\077\065\071\069"and v~="\083\080\069\076\076\095\080\069\082\073\079\068\073\067\095\068\065\077\065\071\069"then return end local n=F and Q or g a={FirstTime=B();FriendTargetGUID=n;FirstDestGUID=Q,Enemies={{GUID=Q,LastTime=B();LastSpellID=c}}}x[c][Z]=a return end local r local m=a.Enemies for n=1,#m,1 do local v=m[n]if v.GUID==Q then r=v break end end if r then r.LastTime=B()r.LastSpellID=c else r={GUID=Q,LastTime=B();LastSpellID=c}A(m,r)end end v:RegisterForCombatEvent(n,"\083\080\069\076\076\095\068\065\077\065\071\069","\083\080\069\076\076\095\080\069\082\073\079\068\073\067\095\068\065\077\065\071\069","\083\080\069\076\076\095\065\085\082\065\095\065\080\080\076\073\069\068","\083\080\069\076\076\095\065\085\082\065\095\082\069\070\082\069\083\072","\083\080\069\076\076\095\065\085\082\065\095\065\080\080\076\073\069\068\095\068\079\083\069")end do local n=s("\070\114\097\109\101","\072\101\114\111\076\105\098\095\083\112\108\097\115\104\066\117\102\102\101\114\070\114\097\109\101",O)local v=0 local G=.05 n:SetScript("\079\110\085\112\100\097\116\101",function()if B()<=v then return end v=B()+G local n=B()-G for v,G in w(x)do local S=X[v]for v,Z in w(G)do if Z.FirstTime<=n then local n=Z.Enemies local y if S.Type=="\080\101\114\105\111\100\105\099\068\097\109\097\103\101"then y=Z.FirstDestGUID else local v=Z.FriendTargetGUID for G=1,#n,1 do local S=n[G]if S.GUID==v then y=S.GUID break end end end if y then local v=a[y]if not v then v={}a[y]=v end local G=v[S.Radius]if not G then G={}v[S.Radius]=G end for v=1,#n,1 do local S=n[v]local Z=G[S.GUID]if Z then if S.LastTime>Z.LastTime then Z.LastTime=S.LastTime Z.LastSpellID=S.LastSpellID end else G[S.GUID]=S end end end G[v]=nil end end end end)end do local n=s("\070\114\097\109\101","\072\101\114\111\076\105\098\095\083\112\108\097\115\104\067\108\101\097\110\101\114\070\114\097\109\101",O)local v=0 local G=.25 n:SetScript("\079\110\085\112\100\097\116\101",function()if B()<=v then return end v=B()+G local n=B()-g for v,G in w(a)do for v,S in w(G)do local Z=0 for v,G in w(S)do if G.LastTime<=n then S[v]=nil else Z=Z+1 end end if Z==0 then G[v]=nil end end end end)end v:RegisterForCombatEvent(function(n,v,G,S,Z,y,p,t)if a[t]then a[t]=nil end for n,v in w(a)do for n,G in w(v)do local S=0 for n,v in w(G)do if t==v.GUID then G[n]=nil else S=S+1 end end if S==0 then v[n]=nil end end end end,"\085\078\073\084\095\068\073\069\068","\085\078\073\084\095\068\069\083\084\082\079\089\069\068")v:RegisterForEvent(function()d(a)for n,v in w(x)do d(v)end end,"\080\076\065\089\069\082\095\082\069\071\069\078\095\069\078\065\066\076\069\068")function F.RegisterNucleusAbility(n,G,S)assert(type(n)=="\115\116\114\105\110\103"and(n=="\068\105\114\101\099\116\068\097\109\097\103\101"or n=="\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101"or n=="\080\101\114\105\111\100\105\099\068\097\109\097\103\101"),"\073\110\118\097\108\105\100 \111\114 \085\110\115\117\112\112\111\114\116\101\100 \084\121\112\101\046")assert(type(G)=="\110\117\109\098\101\114","\073\110\118\097\108\105\100 \083\112\101\108\108\073\068\046")assert(type(S)=="\110\117\109\098\101\114"and(S>=1 and S<100),"\082\097\100\105\117\115 \109\117\115\116 \098\101 \098\101\116\119\101\101\110 \049 \097\110\100 \049\048\048\046")v.Debug("\082\101\103\105\115\116\101\114\078\117\099\108\101\117\115\065\098\105\108\105\116\121 - \065\100\100\105\110\103 \097\098\105\108\105\116\121 "..(G..(" \119\105\116\104 "..(S.."\121 \114\097\100\105\117\115\046"))))X[G]={Type=n,Radius=S}x[G]={}end function F.RegisterNucleusAbilities()v.Debug("\082\101\103\105\115\116\101\114\078\117\099\108\101\117\115\065\098\105\108\105\116\105\101\115")local n=F.RegisterNucleusAbility n("\068\105\114\101\099\116\068\097\109\097\103\101",383313,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",52212,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",50842,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",196528,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",274156,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",155166,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",204167,6)n("\068\105\114\101\099\116\068\097\109\097\103\101",207230,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",49184,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",196771,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",156000,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",115994,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",212739,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",179057,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",258922,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",307046,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",204598,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",200685,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",199552,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",210153,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",210155,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",258860,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",198030,20)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",200166,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",320341,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",212105,13)n("\068\105\114\101\099\116\068\097\109\097\103\101",189112,6)n("\068\105\114\101\099\116\068\097\109\097\103\101",228478,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",247455,8)n("\080\101\114\105\111\100\105\099\068\097\109\097\103\101",164815,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",194153,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",274283,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",88751,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",285381,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",202028,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",106830,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",106785,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",77758,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",213771,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",357209,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",395160,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",396288,6)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",403631,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",357212,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",359077,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",362969,6)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",369374,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",353759,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",171454,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",171457,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",118459,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",2643,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",201754,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",257620,10)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",260247,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",212680,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",212436,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",187708,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",259495,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",270335,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",270323,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",271045,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",1449,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",44425,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",157981,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",31661,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",44457,10)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",2120,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",257542,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",84721,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",190357,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",153596,6)n("\068\105\114\101\099\116\068\097\109\097\103\101",120,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",228600,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",148022,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",228598,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",122,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",157997,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",113656,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",101546,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",261715,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",152175,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",53600,6)n("\068\105\114\101\099\116\068\097\109\097\103\101",53385,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",81297,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",343721,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",385816,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",205386,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",228360,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",228361,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",394979,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",373279,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",121411,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",51723,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",255546,6)n("\068\105\114\101\099\116\068\097\109\097\103\101",22482,6)n("\068\105\114\101\099\116\068\097\109\097\103\101",271881,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",197835,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",282449,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",319175,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",188443,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",77478,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",192231,9)n("\068\105\114\101\099\116\068\097\109\097\103\101",383061,9)n("\068\105\114\101\099\116\068\097\109\097\103\101",452201,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",187874,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",197214,11)n("\068\105\114\101\099\116\068\097\109\097\103\101",27285,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",89753,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",386609,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",86040,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",196278,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",152108,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",387547,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",42223,8)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",22703,10)n("\068\105\114\101\099\116\068\097\109\097\103\101",20153,12)n("\071\114\111\117\110\100\068\105\114\101\099\116\068\097\109\097\103\101",156287,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",396719,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",384318,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",199658,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",50622,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",845,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",262161,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",1680,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",385061,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",385062,12)n("\068\105\114\101\099\116\068\097\109\097\103\101",6572,8)n("\068\105\114\101\099\116\068\097\109\097\103\101",6343,8)end function F.UnregisterNucleusAbilities()v.Debug("\085\110\114\101\103\105\115\116\101\114\078\117\099\108\101\117\115\065\098\105\108\105\116\105\101\115")d(X)d(x)end function Z.GetEnemiesInSplashRangeCount(v,n)if not v:Exists()then return 0 end local G=v:GUID()local S=a[G]if not S then return 1 end local Z=S[n]if Z then local n=0 for v,G in w(Z)do n=n+1 end return n else local v=1 for G,S in w(S)do local Z=0 for n,v in w(S)do Z=Z+1 end if G<n and Z>v then v=Z end end return v end end function Z.GetEnemiesInSplashRange(v,n)if not v:Exists()then return{}end local G=v:GUID()local S=a[G]local Z={}if not S then A(Z,v)return Z end for G,S in w(S)do if G<=n then local G=v:MaxDistance()or 0 G=G+n if G<5 then G=5 end if G>100 then G=100 end for n in w(S)do for v,G in w(y:GetEnemiesInRange(G))do if G.UnitGUID==n then A(Z,G)end end end end end if#Z>=1 then return Z end A(Z,v)return Z end F.RegisterNucleusAbilities()