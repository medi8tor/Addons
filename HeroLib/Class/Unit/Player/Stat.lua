local l,t=...local D,B=HeroCache,t.Utils local G=t.Unit local k,o,d=G.Player,G.Pet,G.Target local e,I=G.Focus,G.MouseOver local R,N,L=G.Arena,G.Boss,G.Nameplate local V,K=G.Party,G.Raid local E=t.Spell local x=t.Item local P=CR_VERSATILITY_DAMAGE_DONE local q=GetCombatRatingBonus local y=GetCritChance local p=GetHaste local g=GetMasteryEffect local Y=GetVersatilityBonus local w=UnitAttackPower local M=UnitAttackSpeed local T=UnitDamage do local l={[103]=true,[259]=true;[260]=true;[261]=true;[268]=true,[269]=true}function k.GCD(t)local B=t:GUID()if B then local G=D.UnitInfo[B]if not G then G={}D.UnitInfo[B]=G end local k=G.GCD if not k then if l[D.Persistent.Player.Spec[1]]then k=1 else local l=1.5/(1+t:HastePct()/100)k=l>.75 and l or.75 end G.GCD=k end return k end end end do local l=E(61304)function k.GCDRemains(t)return l:CooldownRemains(true)end function k.GCDStartTime(t)local D=l:CooldownInfo()return D end end function k.AttackPower(l)return w(l.UnitID)end function k.AttackPowerDamageMod(t,l)local D=l or false local B=6 local G=k:AttackPower()local o,d,e,I,R,N,L=T(t.UnitID)local V,K=M(t.UnitID)if D and K then local l=K*(1+k:HastePct()/100)local t=((e+I)/l)/L-G/B return(G+t*B)*.5 else local l=V*(1+k:HastePct()/100)local t=(((o+d)/2)/l)/L-G/B return G+t*B end end function k.CritChancePct(l)return y()end function k.HastePct(l)return p()end function k.SpellHaste(l)return 1/(1+k:HastePct()/100)end function k.MasteryPct(l)return g()end function k.VersatilityDmgPct(l)return q(P)+Y(P)end