local l,t=...local D,B=HeroCache,t.Utils local G=t.Unit local k,o,d=G.Player,G.Pet,G.Target local e,I=G.Focus,G.MouseOver local R,N,L=G.Arena,G.Boss,G.Nameplate local V,K=G.Party,G.Raid local E=t.Spell local x=t.Item local P=GetTime local q=math.max local y=math.min local p=pairs local g=table.insert local Y=type local w=unpack local M=table.wipe local T={Settings={Refresh=.1;HistoryTime=10.4;HistoryCount=100};Cache={},IterableUnits={d;e,I,w(B.MergeTable(N,L))};Units={},ExistingUnits={};Throttle=0}t.TTD=T function t.TTDRefresh()local l=P()local t=T.Settings.HistoryCount local B=T.Settings.HistoryTime local G=T.Cache local o=T.IterableUnits local d=T.Units local e=T.ExistingUnits M(e)local I for R=1,#o,1 do I=o[R]if I:Exists()then local o=I:GUID()if not e[o]then e[o]=true local R=I:HealthPercentage()if k:CanAttack(I)and R<100 then local k=d[o]if not k or R>k[1][1][2]then k={{};l}d[o]=k end local e=k[1]local I=l-k[2]if not e or R~=e[2]then local l local k=#G if k==0 then l={I,R}else l=G[k]G[k]=nil l[1]=I l[2]=R end g(e,1,l)local o=#e while o>t or I-e[o][1]>B do G[#D+1]=e[o]e[o]=nil o=o-1 end end end end end end for l in p(d)do if not e[l]then d[l]=nil end end end function G.TimeToX(D,l,t)if D:IsDummy()then return 6666 end if D:IsAPlayer()and k:CanAttack(D)then return 25 end local B=8888 local G=T.Units[D:GUID()]if G then local D=t or 3 local k=G[1]local o=#k if o>D then local t,D=0,0 local d,e,I,R=0,0,0,0 for l=1,o,1 do local t=k[l]local D,B=t[1],t[2]d=d+D*D e=e+D I=I+D*B R=R+B end local N=1/(d*o-e*e)t=(-e*I)*N+(d*R)*N D=(o*I)*N-(e*R)*N if D~=0 then B=(l-t)/D B=y(7777,B-(P()-G[2]))if B<0 then B=9999 end end end end return B end local s={[186121]=5;[184580]=10;[184581]=10;[184582]=10,[166608]=10;[164929]=20;[164804]=20,[162099]=50;[168112]=function(l)return not l:CheckHPFromBossList(168113,99)and 49 or 0 end;[165805]=function(l)return l:HealthPercentage()>20 and 45 or 0 end;[180018]=function(l)return l:HealthPercentage()>66 and 66 or l:HealthPercentage()<=66 and(l:HealthPercentage()>33 and 33)or 0 end;[176523]=function(l)return l:HealthPercentage()>70 and 70 or l:HealthPercentage()<=70 and(l:HealthPercentage()>40 and 40)or 0 end;[179390]=function(l)return l:HealthPercentage()>70 and 70 or l:HealthPercentage()<=70 and(l:HealthPercentage()>40 and 40)or 0 end;[180828]=function(l)return l:HealthPercentage()>83 and 83 or k:InstanceDifficulty()==16 and 45 or 50 end;[118566]=85,[94960]=10,[95674]=function(l)return l:HealthPercentage()>50 and 60 or 0 end,[95676]=80;[96759]=70,[114360]=function(l)return not l:CheckHPFromBossList(114263,99)and 25 or k:InstanceDifficulty()==16 and 85 or 90 end;[114361]=function(l)return not l:CheckHPFromBossList(114263,99)and 25 or k:InstanceDifficulty()==16 and 85 or 90 end;[114263]=10;[106643]=function(l)return l:Power()>0 and 10 or 0 end,[88769]=10,[76057]=10,[93023]=50}function G.SpecialTTDPercentage(t,l)local D=s[l]if not D then return 0 end if Y(D)=="\110\117\109\098\101\114"then return D end return D(t)end function G.TimeToDie(t,l)local B=t:GUID()if not B then return 11111 end local G=l or 3 local k=D.UnitInfo[B]if not k then k={}D.UnitInfo[B]=k end local o=k.TTD if not o then o={}k.TTD=o end if not o[G]then o[G]=t:TimeToX(t:SpecialTTDPercentage(t:NPCID()),G)end return o[G]end function G.BossTimeToDie(t,l)if t:IsInBossList()or t:IsDummy()then return t:TimeToDie(l)end return 11111 end function G.FilteredTimeToDie(o,l,t,D,G,k)local d=o:TimeToDie(k)return d<(G or 7777)and B.CompareThis(l,d+(D or 0),t)or false end function G.BossFilteredTimeToDie(k,l,t,D,B,G)if k:IsInBossList()or k:IsDummy()then return k:FilteredTimeToDie(l,t,D,B,G)end return false end function G.TimeToDieIsNotValid(t,l)return t:TimeToDie(l)>=7777 end function G.BossTimeToDieIsNotValid(t,l)if t:IsInBossList()then return t:TimeToDieIsNotValid(l)end return true end function t.FightRemains(l,t)local D,B for l,t in p(N)do if t:Exists()then D=true if not t:TimeToDieIsNotValid()then B=q(B or 0,t:TimeToDie())end end end if D or t then return B or 11111 end if l then for l,t in p(l)do if not t:IsUserCycleBlacklisted()and((t:AffectingCombat()or t:IsDummy())and not t:TimeToDieIsNotValid())then B=q(B or 0,t:TimeToDie())end end if B then return B end end return d:TimeToDie()end function t.BossFightRemains()return t.FightRemains(nil,true)end function t.BossFightRemainsIsNotValid()return t.BossFightRemains()>=7777 end function t.FilteredFightRemains(l,D,G,k,o)local d=t.FightRemains(l,o)if k and d>=7777 then return false end return B.CompareThis(D,d,G)or false end function t.BossFilteredFightRemains(l,D,B)return t.FilteredFightRemains(nil,l,D,B,true)end