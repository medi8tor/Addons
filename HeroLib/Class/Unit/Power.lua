local l,t=...local D,B=HeroCache,t.Utils local G=t.Unit local k,o,d=G.Player,G.Pet,G.Target local e,I=G.Focus,G.MouseOver local R,N,L=G.Arena,G.Boss,G.Nameplate local V,K=G.Party,G.Raid local E=t.Spell local x=t.Item local P=GetPowerRegen local q=UnitPower local y=UnitPowerMax local p=UnitPowerType function G.PowerType(l)local t=l:ID()return p(t)end function G.PowerMax(l)local t=l:ID()return y(t,l:PowerType())end function G.Power(l)local t=l:ID()return q(t,l:PowerType())end function G.PowerRegen(l)local t=l:ID()return P(t)end function G.PowerPercentage(l)return(l:Power()/l:PowerMax())*100 end function G.PowerDeficit(l)return l:PowerMax()-l:Power()end function G.PowerDeficitPercentage(l)return(l:PowerDeficit()/l:PowerMax())*100 end function G.PowerRegenPercentage(l)return(l:PowerRegen()/l:PowerMax())*100 end function G.PowerTimeToMax(l)if l:PowerRegen()==0 then return-1 end return l:PowerDeficit()/l:PowerRegen()end function G.PowerTimeToX(D,l,t)if D:PowerRegen()==0 then return-1 end return l>D:Power()and(l-D:Power())/(D:PowerRegen()*(1-(t or 0)))or 0 end function G.PowerTimeToXPercentage(t,l)if t:PowerRegen()==0 then return-1 end return l>t:PowerPercentage()and(l-t:PowerPercentage())/t:PowerRegenPercentage()or 0 end