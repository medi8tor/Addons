local L,N=...local u,b=HeroCache,N.Utils local O,y=N.Unit,N.UnitGUIDMap local P,H,l=O.Player,O.Pet,O.Target local f,j=O.Focus,O.MouseOver local e,W,r=O.Arena,O.Boss,O.Nameplate local S,M=O.Party,O.Raid local o=N.Spell local t=N.Item local h=GetUnitSpeed local s=UnitAffectingCombat local E=UnitCanAttack local q=UnitClassification local p=UnitExists local D=UnitGUID local X=UnitHealth local A=UnitHealthMax local a=UnitIsDeadOrGhost local w=UnitIsPlayer local n=UnitIsUnit local K=UnitIsVisible local B=UnitLevel local v=UnitName local J=UnitThreatSituation local V=strsplit local Y=tonumber function O.Cache(L)L:RemoveUnitGUIDMapEntry()L.UnitExists=p(L.UnitID)or false L.UnitGUID=D(L.UnitID)L.UnitName=v(L.UnitID)L.UnitCanBeAttacked=E("\112\108\097\121\101\114",L.UnitID)or false L.UnitNPCID=L:NPCID(true)if L.UnitGUID and L.UnitID then L:AddUnitGUIDMapEntry()end end function O.ID(L)return L.UnitID end function O.GUID(L)if L.UseCache then return L.UnitGUID end return D(L.UnitID)end function O.Name(L)if L.UseCache then return L.UnitName end return v(L.UnitID)end function O.Exists(L)if L.UseCache then return L.UnitExists and K(L.UnitID)end return p(L.UnitID)and K(L.UnitID)end function O.NPCID(N,L)if not L and(N.UseCache and N.UnitNPCID)then return N.UnitNPCID end local b=N:GUID()if not b then return-1 end local O=u.UnitInfo[b]if not O then O={}u.UnitInfo[b]=O end local y=O.NPCID if not y then local L,N,u,P,H,l=V("-",b)if L=="\067\114\101\097\116\117\114\101"or L=="\080\101\116"or L=="\086\101\104\105\099\108\101"then y=Y(l)else y=-2 end O.NPCID=y end return y end function O.Level(L)return B(L.UnitID)end function O.Class(L)return UnitClass(L.UnitID)end function O.IsInBossList(N,L)local u=L or N:NPCID()for L,N in pairs(W)do if N:Exists()and N:NPCID()==u then return true end end return false end function O.CheckHPFromBossList(u,L,N)local b=L or u:NPCID()local O=N or 100 for L,N in pairs(W)do if N:Exists()and(N:NPCID()==b and N:HealthPercentage()<=O)then return true end end return false end function O.CanAttack(N,L)local u=N:ID()if u=="\112\108\097\121\101\114"and L.UseCache then return L.UnitCanBeAttacked end return E(u,L:ID())end local x={[31146]=true;[31144]=true;[32666]=true;[32667]=true;[46647]=true,[114832]=true,[153285]=true,[153292]=true;[67127]=true,[87317]=true;[87318]=true;[87320]=true;[88314]=true;[88316]=true;[87760]=true,[87761]=true;[87762]=true,[88288]=true;[88289]=true,[113964]=true,[113966]=true,[103397]=true;[103404]=true;[103402]=true;[107555]=true;[107556]=true;[92164]=true;[92165]=true;[92166]=true,[101956]=true,[102045]=true,[102048]=true;[102052]=true;[144081]=true;[144082]=true;[144085]=true,[144086]=true,[126781]=true,[131983]=true;[131989]=true;[131992]=true,[154564]=true,[154567]=true;[154580]=true,[154583]=true,[154585]=true;[154586]=true;[160325]=true;[173942]=true,[175449]=true;[175450]=true;[175451]=true,[175452]=true;[175455]=true,[175456]=true,[175462]=true,[174565]=true;[174566]=true;[174567]=true,[174568]=true,[174569]=true,[174570]=true,[174571]=true,[174484]=true;[174487]=true;[174488]=true;[174491]=true;[198594]=true;[194648]=true;[189632]=true;[194643]=true,[194644]=true;[197833]=true;[189617]=true,[194649]=true;[193563]=true,[219250]=true;[225976]=true,[225977]=true;[225978]=true,[225982]=true;[225983]=true;[225984]=true;[225985]=true,[65310]=true,[66374]=true,[196394]=true;[196406]=true,[199057]=true}function O.IsDummy(L)local N=L:NPCID()return N>=0 and x[N]==true end function O.IsAPlayer(L)return w(L.UnitID)end function O.Health(L)return X(L.UnitID)or-1 end function O.MaxHealth(L)return A(L.UnitID)or-1 end function O.HealthPercentage(L)local N=L:Health()local u=L:MaxHealth()return N>0 and(u>0 and(N/u)*100)or-1 end function O.IsDeadOrGhost(L)return a(L.UnitID)end function O.AffectingCombat(L)return s(L.UnitID)end function O.IsUnit(N,L)return n(N.UnitID,L.UnitID)end function O.Classification(L)return q(L.UnitID)or""end function O.IsTanking(u,L,N)local b=J(u:ID(),L:ID())return b and b>=(N or 2)or false end function O.IsTankingAoE(u,L,N)local b=false for L,O in pairs(P:GetEnemiesInRange(L or 6.5))do if u:IsTanking(O,N)then b=true end end return b end function O.IsMoving(L)return h(L.UnitID)~=0 end