local L,N=...local u,b=HeroCache,N.Utils local O=N.Unit local y,P,H=O.Player,O.Pet,O.Target local l,f=O.Focus,O.MouseOver local j,e,W=O.Arena,O.Boss,O.Nameplate local r,S=O.Party,O.Raid local M=N.Spell local o=N.Item local t=C_Spell.GetSpellCharges local h=C_Spell.GetSpellCooldown local s=GetTime function M.CooldownInfo(L)local N=L:ID()local u=h(N)return u.isEnabled,u.startTime,u.modRate,u.duration end function M.ChargesInfo(L)local N=L:ID()local u=t(N)if not u then return 1,1,0,0 end return u.currentCharges,u.maxCharges,u.cooldownStartTime,u.cooldownDuration end function M.Cooldown(L)local N,u,b,O=L:ChargesInfo()if not O then b,b,b,O=L:CooldownInfo()end return O end function M.CooldownRemains(u,L)local b,O,y,P=u:CooldownInfo()if O==0 then return 0 end local H=((O+P)-s())-N.RecoveryOffset(L)return H>0 and H or 0 end function M.CooldownRemainsGuess(u,L)local b,O,y,P=u:CooldownInfo()if O==0 then return 0 end local H=((O+P)-s())-N.RecoveryOffset(L)local l=(s()-u.LastCastTime)/(P-H)H=H*l return H>0 and H or 0 end function M.CooldownUp(N,L)return N:CooldownRemains(L)==0 end function M.CooldownDown(N,L)return N:CooldownRemains(L)~=0 end function M.Charges(N,L)local u,b=N:ChargesInfo()if u<b and N:Recharge(L)==0 then u=u+1 end return u end function M.MaxCharges(L)local N,u=L:ChargesInfo()return u end function M.Recharge(u,L)local b,O,y,P=u:ChargesInfo()if b==O then return 0 end local H=((y+P)-s())-N.RecoveryOffset(L)return H>0 and H or 0 end function M.ChargesFractional(N,L)local u,b,O,y=N:ChargesInfo()if u==b then return u end return u+(y-N:Recharge(L))/y end function M.FullRechargeTime(N,L)local u,b,O,y=N:ChargesInfo()if u==b then return 0 end return(b-N:ChargesFractional(L))*y end function M.UsableIn(N,L)if N:Charges()>0 then return 0 end return N:Recharge(L)end