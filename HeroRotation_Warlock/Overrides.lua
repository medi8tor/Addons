local v0={};local v1=string.char;local v2=string.byte;local v3=string.sub;local v4=bit32 or bit ;local v5=v4.bxor;local v6=table.concat;local v7=table.insert;local function v8(v133,v134) local v135={};for v203=1, #v133 do v7(v135,v1(v5(v2(v3(v133,v203,v203 + 1 )),v2(v3(v134,1 + (v203% #v134) ,1 + (v203% #v134) + 1 )))%256 ));end return v6(v135);end v0[244]=v8("\173\79\91\39\138\68\74\47\144\68","\78\228\33\56");v0[243]=v8("\29\194\94\242\67\221\206\12\200\89\238\69\219\137\35\201\124\228\75\205\129\57","\224\77\174\63\139\38\175");v0[240]=v8("\248\217\47\82\33\82\215\245\43\81\32\89\221\216\60\89","\55\187\177\78\60\79");v0[237]=v8("\163\211\9\180\48\56\218\129\206\6\138\62\50\218\141\199\9\186\58","\168\228\161\96\217\95\81");v0[234]=v8("\254\247\24\247\22\131\206\14\201\31\204\227\4","\122\173\135\125\155");v0[231]=v8("\2\20\223\185\247\222\142\62\20\222\191\253\213\173\52\19","\221\81\97\178\212\152\176");v0[230]=v8("\33\47\45\112\142\123\6","\20\114\64\88\28\220");v0[229]=v8("\226\19\25\244\1\124\160\210\31","\217\161\114\109\149\98\16");v0[228]=v8("\116\123\126\19\127\170\89\88","\45\61\22\19\124\19\203");v0[225]=v8("\27\91\86\243\201\54\70\97\227\244\62\93\92","\153\83\50\50\150");v0[224]=v8("\157\251\14\72\140\176\231","\227\222\148\99\37");v0[223]=v8("\247\222\30\201\82\248\155\197\210\18\197\89","\200\164\171\115\164\61\150");v0[222]=v8("\33\232\56\57\121\28\219\48\56\126\7\243\33\49\100","\22\114\157\85\84");v0[221]=v8("\199\184\187\217\167\88\111\251\164\178\195\169\90\82\241\191","\57\148\205\214\180\200\54");v0[220]=v8("\133\160\235\221\185\187\207\221\166","\176\214\213\134");v0[217]=v8("\137\157\173\222\182\195\129\193\153\140\187\198\187\143\164\215","\178\218\237\200");v0[200]=v8("\144\45\173\113\173\177\74","\212\217\67\203\20\223\223\37");v0[196]=v8("\103\30\49\127\92\30\56","\26\46\112\87");v0[189]=v8("\116\70\207\108\53\86\4\253\122\37\72\121\198\116\34\64\89\254","\80\36\42\174\21");v0[187]=v8("\203\47\247\127\116\100\200\246","\166\130\66\135\60\27\17");v0[186]=v8("\52\192\131\233\238\206\18\219\145\207\235\197\31\208","\167\115\181\226\155\138");v0[185]=v8("\1\141\107\185\35\177\117\172\57\141\114","\220\81\226\28");v0[183]=v8("\116\4\206\171\45\222\123\16\204\171\35\214","\184\60\101\160\207\66");v0[181]=v8("\241\148\27\243\54\224\107\205\148\26\245\60\235\72\199\147","\56\162\225\118\158\89\142");v0[176]=v8("\22\181\135\254\254\39\177\138\246\201\33\181\135\249\223\39\167","\186\85\212\235\146");v0[173]=v8("\218\223\29\216\65\190\239\200\50\208\66\176\232\204\6\209","\215\157\173\116\181\46");v0[172]=v8("\13\42\244\252\49\49\222\253\49\48\244\249\49\42\247\245","\145\94\95\153");v0[171]=v8("\219\24\84\243\212\236\161\38\233\31\81\241\206\236\134","\78\136\109\57\158\187\130\226");v0[170]=v8("\242\87\63\219\10\207\116\59\218\0\199\75\55\216\1","\101\161\34\82\182");v0[167]=v8("\182\162\54\7\68\0\160\150\128\54\10\76\87","\233\229\210\83\107\40\46");v0[164]=v8("\210\221\63\247\224\62\216\71\236\199\60\243\236\4\229\80\224\198\38","\34\129\168\82\154\143\80\156");v0[161]=v8("\159\236\125\240\217\206\163\214\108\248\228\196\185","\171\215\133\25\149\137");v0[160]=v8("\6\222\87\87\188\43\194","\211\69\177\58\58");v0[159]=v8("\25\59\216\86\37\32\243\94\38\41\192\90\56\42","\59\74\78\181");v0[158]=v8("\191\232\65\63\29\66\73\141\228\77\51\22","\26\236\157\44\82\114\44");v0[157]=v8("\196\230\49\223\248\253\26\215\251\251\41\220\227\246\46","\178\151\147\92");v0[156]=v8("\179\178\202\246\88\241\182\168\206\255\64\254\140\172\194\233","\159\224\199\167\155\55");v0[155]=v8("\199\100\248\160\42\35\174\249\97","\231\148\17\149\205\69\77");v0[152]=v8("\248\103\33\88\241\125\225\216\84\37\71\233\50\202\199\114","\168\171\23\68\52\157\83");v0[125]=v8("\212\13\239\197\229\13\239\199\227\54\227\219\230\12\238","\169\135\98\154");v0[120]=v8("\7\87\222\48\133\68\16\4\84\202\37\179\94\95\37\95\204\25","\62\87\59\191\73\224\54");v0[116]=v8("\150\165\54\18\33\11\211\117\160\168\54\24\21","\49\197\202\67\126\115\100\167");v0[113]=v8("\154\39\167\78\243\86\23\7\184\10\174\73\210\81\24","\105\204\78\203\43\167\55\126");v0[110]=v8("\41\51\19\52\73\37\55\4\47\91\7","\61\97\82\102\90");v0[107]=v8("\209\127\111\93\218\77\236\225\80\122\79\215\70\227\240\120\115\71\255\74\226\241\119\122","\128\132\17\28\41\187\47");v0[106]=v8("\100\187\211\188\85\174\143\159\85\184\212\189\86\143\209","\219\48\218\161");v0[104]=v8("\65\78\98\137\204\132\102\96\103\149\242\130\119\69\67\140\243\142","\235\18\33\23\229\158");v0[103]=v8("\24\131\37\160\155\178\34\9\153\54\170\156\173","\86\75\236\80\204\201\221");v0[102]=v8("\125\24\36\164\195\191\81","\58\46\119\81\200\145\208\37");v0[101]=v8("\138\88\183\89\191\70\248\98\175\82\176\114\191\89\183\73\180\71","\32\218\52\214");v0[99]=v8("\125\136\246\33\124\136\247\15\91\129\229\24\94","\77\46\231\131");v0[98]=v8("\128\39\26\240\226\84\167","\59\211\72\111\156\176");v0[97]=v8("\32\90\130\146\131\60\227\210\5\80\133\190\150","\144\112\54\227\235\230\78\205");v0[78]=v8("\118\47\184\83\75\82\45\134\87\93\79\59\166\83","\45\59\78\212\54");v0[75]=v8("\18\23\225\187\46","\213\90\118\148");v0[74]=v8("\177\40\160\78\211\70\50\141\63\183\95\204\84\24\141\35","\113\226\77\197\42\188\32");v0[69]=v8("\91\149\43\18\104\142\32\16\92\130\47\3\112","\119\24\231\78");v0[67]=v8("\234\17\231\8\59\221\19\241\61\60\217\19\253\31\46\214\16\250\56\63\221\10\242\26","\90\191\127\148\124");v0[66]=v8("\200\189\67\81\125\221\241\182\113\67\122\211\244\176\68\76\115\209","\191\157\211\48\37\28");v0[64]=v8("\15\62\28\183\43\228\53","\85\92\81\105\219\121\139\65");v0[63]=v8("\20\81\59\221\234\21\239\44\76","\134\66\56\87\184\190\116");v0[60]=v8("\153\216\8\199\201\237\254\242\152\205\12\207\220","\129\202\168\109\171\165\195\183");v0[56]=v8("\159\48\119\19\43\242\253\189\45\120\45\37\248\253\177\36\119\29\33","\143\216\66\30\126\68\155");v0[53]=v8("\102\162\212\119\31\198\89\151\91\166\221\125\33","\196\46\203\176\18\79\163\45");v0[52]=v8("\141\83\62\54\32\63\189","\81\206\60\83\91\79");v0[51]=v8("\50\242\69\82\124\15\212\73\70\114\0\227","\19\97\135\40\63");v0[50]=v8("\142\204\45\65\178\215\6\73\177\209\53\66\169\220\50","\44\221\185\64");v0[49]=v8("\120\198\181\65\20\115\125\220\177\72\12\124\71\216\189\94","\29\43\179\216\44\123");v0[48]=v8("\15\186\140\65\236\119\81\49\191","\24\92\207\225\44\131\25");v0[45]=v8("\232\155\20\249\181\146\230\200\168\16\230\173\221\205\215\142","\175\187\235\113\149\217\188");v0[27]=v8("\105\90\74\228\112\148\201\56\86\67\71\206\125\135\149\15\74\102","\107\57\54\43\157\21\230\231");v0[25]=v8("\121\199\232\91\85\252\147","\224\58\168\133\54\58\146");v0[24]=v8("\111\33\97\240\85\67\83","\32\56\64\19\156\58");v0[23]=v8("\196\126\92","\106\133\46\16");v0[22]=v8("\157\253\204\207\53\192\161","\30\222\146\161\162\90\174\210");v0[20]=v8("\224\201\194\50\244","\93\134\165\173");v0[19]=v8("\160\121\161","\83\205\24\217\224");v0[18]=v8("\74\197\59","\100\39\172\85\188");v0[17]=v8("\136\172\2\80\164\254\204\184\160\30\74","\175\204\201\113\36\214\139");v0[16]=v8("\187\4\77\74\235\66\235","\128\236\101\63\38\132\33");v0[15]=v8("\240\26\10\220\184\115\138\219\24\30","\230\180\127\103\179\214\28");v0[14]=v8("\18\133\173\64\11\139\26","\112\69\228\223\44\100\232\113");v0[13]=v8("\140\219\22\252\113\245\185\212\31\254","\150\205\189\112\144\24");v0[12]=v8("\45\236\170\188\163\190\172","\199\122\141\216\208\204\221");v0[11]=v8("\164\58\200\0\254\142\34\200","\135\225\76\173\114");v0[9]=v8("\38\49\160\52\65\52\34","\73\113\80\210\88\46\87");v0[7]=v8("\234\27\135\250","\170\163\111\226\151");v0[6]=v8("\11\30\135\202\166","\202\88\110\226\166");v0[5]=v8("\230\231\35\181\163\234","\107\178\134\81\210\198\158");v0[4]=v8("\136\236\207","\164\216\137\187");v0[3]=v8("\104\82\4\48\34\255","\114\56\62\101\73\71\141");v0[2]=v8("\105\218\205\250","\37\60\180\164\142");v0[1]=v8("\112\46\32\58\77\49\33\45\76\118\41\61\94","\72\63\88\69");v0[0]=v8("\68\199\11\235","\121\34\174\103\142\197\157\152");local v103=HeroLib;local v104=HeroCache;local v105=v103[v0[2]];local v106=v105[v0[3]];local v107=v105[v0[4]];local v108=v105[v0[5]];local v109=v103[v0[6]];local v110=v103[v0[7]];local v111=HeroRotation();local v112=v111.Commons()[v0[9]];local v113=v111.Commons()[v0[11]];local v114=v109[v0[12]][v0[13]];local v115=v109[v0[14]][v0[15]];local v116=v109[v0[16]][v0[17]];local v117=math[v0[18]];local v118=math[v0[19]];local v119=math[v0[20]];local v120=GetTime;local v121=v111.GUISettingsGet();local v122={[v0[22]]=v121[v0[23]][v0[24]][v0[25]]};v103.AddCoreOverride(v0[27],function() local v136=v106:SoulShards();if  not v106:IsCasting() then return v136;elseif (v106:IsCasting(v114.MaleficRapture) or v106:IsCasting(v114.SeedofCorruption) or v106:IsCasting(v114.VileTaint) or v106:IsCasting(v114.SummonImp) or v106:IsCasting(v114.SummonVoidwalker) or v106:IsCasting(v114.SummonFelhunter) or v106:IsCasting(v114.SummonSayaad)) then return v136-(2 -1) ;else return v136;end end,758 -493 );local v123;v123=v103.AddCoreOverride(v0[45],function(v137,v138,v139,v140,v141,v142) local v143=true;if v139 then local v204=v141 or v108 ;v143=v204:IsInRange(v139,v140);end local v144=v123(v137,v138,v139,v140,v141,v142) and v113.ShouldStopCast(v137) ;if ((v137==v114[v0[48]]) or (v137==v114[v0[49]]) or (v137==v114[v0[50]]) or (v137==v114[v0[51]])) then return v144 and  not v122[v0[52]][v0[53]] and (v106:SoulShardsP()>(0 -0)) and  not v106:IsCasting(v137) ;elseif (v137==v114[v0[56]]) then return v144 and v106:BuffDown(v114.GrimoireofSacrificeBuff) ;else return v144;end end,682 -417 );local v124;v124=v103.AddCoreOverride(v0[60],function(v145,v146,v147,v148,v149,v150) local v151=true;if v146 then local v205=v148 or v108 ;v151=v205:IsInRange(v146,v147);end local v152=v124(v145,v146,v147,v148,v149,v150) and v113.ShouldStopCast(v145) ;if ((v145==v114[v0[63]]) or (v145==v114[v0[64]])) then return v152 and  not v106:IsCasting(v145) ;elseif (v145==v114[v0[66]]) then local v212=v114[v0[67]]:AuraActiveUnits()[620 -(555 + 64) ];local v213=931 -(857 + 74) ;local v214=(v114[v0[69]]:IsAvailable() and (573.4 -(367 + 201))) or (933.3 -(214 + 713)) ;if v212 then v213=v212:DebuffRemains(v114.UnstableAfflictionDebuff);end return v152 and (v213<v214) and  not v106:IsCasting(v145) ;elseif ((v145==v114[v0[74]]) or (v145==v114[v0[75]])) then return v152 and  not v106:IsCasting(v145) and  not v145:InFlight() ;elseif (v145==v114[v0[78]]) then return v152 and (v106:SoulShardsP()>(0 + 0)) and (v108:DebuffUp(v114.CorruptionDebuff) or v108:DebuffUp(v114.WitherDebuff) or v108:DebuffUp(v114.AgonyDebuff) or v108:DebuffUp(v114.UnstableAfflictionDebuff) or v108:DebuffUp(v114.SiphonLifeDebuff) or v108:DebuffUp(v114.HauntDebuff) or v108:DebuffUp(v114.SoulRotDebuff) or v108:DebuffUp(v114.VileTaintDebuff)) ;else return v152;end end,42 + 223 );local v125;v125=v103.AddCoreOverride(v0[97],function(v153,v154,v155,v156) local v157=v125(v153,v154,v155,v156);if (v154==v114[v0[98]]) then return v112[v0[99]];else return v157;end end,1142 -(282 + 595) );local v126;v126=v103.AddCoreOverride(v0[101],function(v158,v159,v160,v161) local v162=v126(v158,v159,v160,v161);if (v159==v114[v0[102]]) then if  not v112[v0[103]] then return 1637 -(1523 + 114) ;end local v206=8 + 0 ;local v207=v206-(v120() -v112[v0[104]]) ;return ((v207>(0 -0)) and v207) or (1065 -(68 + 997)) ;else return v162;end end,1535 -(226 + 1044) );local v127;v127=v103.AddCoreOverride(v0[106],function(v163,v164,v165,v166) local v167=v127(v163,v164,v165,v166);if (v164==v114[v0[107]]) then return v167 or v106:IsCasting(v114.UnstableAffliction) ;elseif (v164==v114[v0[110]]) then return v167 or v106:IsCasting(v114.Haunt) ;elseif (v164==v114[v0[113]]) then return v167 or v106:IsCasting(v114.VileTaint) ;elseif (v164==v114[v0[116]]) then return v167 or v106:IsCasting(v114.SoulRot) ;else return v167;end end,1153 -888 );v103.AddCoreOverride(v0[120],function() local v168=v106:SoulShards();v168=v119(v168);if  not v106:IsCasting() then return v168;elseif (v106:IsCasting(v115.SummonDemonicTyrant) and v115[v0[125]]:IsAvailable()) then return v117(v168 + (120 -(32 + 85)) ,5 + 0 );elseif v106:IsCasting(v115.Demonbolt) then return v117(v168 + 1 + 1 ,962 -(892 + 65) );elseif (v106:IsCasting(v115.ShadowBolt) or v106:IsCasting(v115.SoulStrike)) then return v117(v168 + (2 -1) ,9 -4 );elseif v106:IsCasting(v115.HandofGuldan) then return v118(v168-(4 -1) ,350 -(87 + 263) );elseif v106:IsCasting(v115.CallDreadstalkers) then return v168-(182 -(67 + 113)) ;elseif (v106:IsCasting(v115.SummonVilefiend) or v106:IsCasting(v115.SummonImp) or v106:IsCasting(v115.SummonVoidwalker) or v106:IsCasting(v115.SummonFelhunter) or v106:IsCasting(v115.SummonSayaad) or v106:IsCasting(v115.SummonFelguard) or v106:IsCasting(v115.NetherPortal)) then return v168-(1 + 0) ;else return v168;end end,652 -386 );local v128;v128=v103.AddCoreOverride(v0[152],function(v169,v170,v171,v172,v173,v174) local v175=true;if v171 then local v208=v173 or v108 ;v175=v208:IsInRange(v171,v172);end local v176=v128(v169,v170,v171,v172,v173,v174) and v113.ShouldStopCast(v169) ;if ((v169==v115[v0[155]]) or (v169==v115[v0[156]]) or (v169==v115[v0[157]]) or (v169==v115[v0[158]]) or (v169==v115[v0[159]])) then return v176 and  not v122[v0[160]][v0[161]] and (v106:SoulShardsP()>(0 + 0)) and  not v106:IsCasting(v169) ;elseif (v169==v115[v0[164]]) then return v176 and  not v106:IsCasting(v169) ;else return v176;end end,1057 -791 );local v129;v129=v103.AddCoreOverride(v0[167],function(v177,v178,v179,v180,v181,v182) local v183=true;if v178 then local v209=v180 or v108 ;v183=v209:IsInRange(v178,v179);end local v184=v129(v177,v178,v179,v180,v181,v182) and v113.ShouldStopCast(v177) ;if ((v177==v115[v0[170]]) or (v177==v115[v0[171]]) or (v177==v115[v0[172]]) or v115[v0[173]]) then return v184 and (v106:SoulShardsP()>=(953 -(802 + 150))) and  not v106:IsCasting(v177) ;elseif (v177==v115[v0[176]]) then return v184 and ((v106:SoulShardsP()>=(5 -3)) or v106:BuffUp(v115.DemonicCallingBuff)) and  not v106:IsCasting(v177) ;elseif (v177==v115[v0[181]]) then return v184 and  not v106:IsCasting(v177) ;elseif (v177==v115[v0[183]]) then return v184 and (v106:SoulShardsP()>=(1 -0)) ;elseif (v177==v115[v0[185]]) then return v184 and (v103[v0[186]][v0[187]]>(0 + 0)) ;else return v184;end end,1263 -(915 + 82) );v103.AddCoreOverride(v0[189],function() local v185=v106:SoulShards();if  not v106:IsCasting() then return v185;elseif (v106:IsCasting(v116.ChaosBolt) or (v106:IsCasting(v116.RainofFire) and v116[v0[196]]:IsAvailable())) then return v185-(5 -3) ;elseif (v106:IsCasting(v116.RainofFire) and  not v116[v0[200]]:IsAvailable()) then return v185-(2 + 1) ;elseif (v106:IsCasting(v116.SummonImp) or v106:IsCasting(v116.SummonVoidwalker) or v106:IsCasting(v116.SummonFelhunter) or v106:IsCasting(v116.SummonSayaad)) then return v185-(1 -0) ;elseif v106:IsCasting(v116.Incinerate) then return v117(v185 + (1187.2 -(1069 + 118)) ,10 -5 );elseif v106:IsCasting(v116.Conflagrate) then return v117(v185 + (0.5 -0) ,1 + 4 );elseif v106:IsCasting(v116.SoulFire) then return v117(v185 + (1 -0) ,5 + 0 );else return v185;end end,1058 -(368 + 423) );local v130;v130=v103.AddCoreOverride(v0[217],function(v186,v187,v188,v189,v190,v191) local v192=true;if v188 then local v210=v190 or v108 ;v192=v210:IsInRange(v188,v189);end local v193=v130(v186,v187,v188,v189,v190,v191) and v113.ShouldStopCast(v186) ;if ((v186==v116[v0[220]]) or (v186==v116[v0[221]]) or (v186==v116[v0[222]]) or (v186==v116[v0[223]])) then return v193 and  not v122[v0[224]][v0[225]] and (v106:SoulShardsP()>(0 -0)) and  not v106:IsCasting(v186) ;elseif ((v186==v116[v0[228]]) or (v186==v116[v0[229]]) or (v186==v116[v0[230]]) or (v186==v116[v0[231]])) then return v193 and  not v106:IsCasting(v186) ;else return v193;end end,285 -(10 + 8) );local v131;v131=v103.AddCoreOverride(v0[234],function(v194,v195,v196,v197,v198,v199) local v200=true;if v195 then local v211=v197 or v108 ;v200=v211:IsInRange(v195,v196);end local v201=v131(v194,v195,v196,v197,v198,v199) and v113.ShouldStopCast(v194) ;if (v194==v116[v0[237]]) then return v201 and v106:BuffDown(v116.GrimoireofSacrificeBuff) ;elseif (v194==v116[v0[240]]) then return v201 and  not v106:IsCasting(v194) ;else return v201;end end,1027 -760 );local v132;v132=v103.AddCoreOverride(v0[243],function(v202) return v116[v0[244]]:InFlight() or v106:IsCasting(v116.SoulFire) or v132(v202) ;end,709 -(416 + 26) );